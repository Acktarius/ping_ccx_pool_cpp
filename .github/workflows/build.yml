name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # Strip the 'v' prefix for CMake compatibility but keep it for filenames
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "FILE_VERSION=v${VERSION}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=1.0.2-dev" >> $GITHUB_OUTPUT
          echo "FILE_VERSION=v1.0.2-dev" >> $GITHUB_OUTPUT
        fi
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libwxgtk3.0-gtk3-dev nlohmann-json3-dev nmap
        
    - name: Create Build Directory
      run: mkdir build
      
    - name: Configure CMake
      working-directory: build
      run: cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
      
    - name: Build
      working-directory: build
      run: cmake --build . --config Release
      
    - name: Download linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        
    - name: Prepare AppDir
      working-directory: build
      run: |
        # Create necessary directories
        mkdir -p AppDir/usr/{bin,share/{applications,polkit-1/actions,icons/hicolor/{128x128,256x256}/apps,metainfo,doc/PingCCXPool}}
        
        # Copy binary
        cp bin/PingCCXPool AppDir/usr/bin/
        chmod +x AppDir/usr/bin/PingCCXPool
        
        # Copy policy file
        cp ../org.acktarius.nping.policy AppDir/usr/share/polkit-1/actions/
        
        # Copy copyright file for the icon
        cp ../copyright AppDir/usr/share/doc/PingCCXPool/
        
        # Copy and prepare icons (Copyright Acktarius)
        cp ../pp.png AppDir/usr/share/icons/hicolor/256x256/apps/PingCCXPool.png
        cp ../pp.png AppDir/usr/share/icons/hicolor/128x128/apps/PingCCXPool.png
        
        # Create a symbolic link for the icon in the root directory
        ln -sf usr/share/icons/hicolor/256x256/apps/PingCCXPool.png AppDir/PingCCXPool.png
        
        # Copy and update metainfo file
        cp ../org.acktarius.PingCCXPool.appdata.xml AppDir/usr/share/metainfo/
        sed -i "s/VERSION_X/${{ steps.get_version.outputs.VERSION }}/g" AppDir/usr/share/metainfo/org.acktarius.PingCCXPool.appdata.xml
        sed -i "s/DATE_X/$(date +%Y-%m-%d)/g" AppDir/usr/share/metainfo/org.acktarius.PingCCXPool.appdata.xml
        
    - name: Create desktop entry
      working-directory: build
      run: |
        mkdir -p AppDir/usr/share/applications/
        cp PingCCXPool.desktop AppDir/usr/share/applications/PingCCXPool.desktop
        
        # Update the desktop entry with correct values
        sed -i "s|VERSION_X|${{ steps.get_version.outputs.VERSION }}|g" AppDir/usr/share/applications/PingCCXPool.desktop
        sed -i "s|INSTALL_PATH|/usr/bin|g" AppDir/usr/share/applications/PingCCXPool.desktop
        sed -i "s|EXEC_NAME|PingCCXPool|g" AppDir/usr/share/applications/PingCCXPool.desktop
        
        # Create a symbolic link for the desktop file in the root directory
        ln -sf usr/share/applications/PingCCXPool.desktop AppDir/PingCCXPool.desktop
        
    - name: Create AppImage
      working-directory: build
      run: |
        # Create AppImage with explicit executable, desktop file, and icon
        ../linuxdeploy-x86_64.AppImage \
          --appdir AppDir \
          --executable=AppDir/usr/bin/PingCCXPool \
          --desktop-file=AppDir/usr/share/applications/PingCCXPool.desktop \
          --icon-file=AppDir/usr/share/icons/hicolor/256x256/apps/PingCCXPool.png \
          --output appimage
        
        # Rename and create MD5
        mv PingCCXPool*.AppImage PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
        md5sum PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage > PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64
        path: |
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 