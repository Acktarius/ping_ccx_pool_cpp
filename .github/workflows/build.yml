name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # Strip the 'v' prefix for CMake compatibility but keep it for filenames
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "FILE_VERSION=v${VERSION}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=1.0.2-dev" >> $GITHUB_OUTPUT
          echo "FILE_VERSION=v1.0.2-dev" >> $GITHUB_OUTPUT
        fi
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libwxgtk3.0-gtk3-dev nlohmann-json3-dev nmap
        
    - name: Create Build Directory
      run: mkdir build
      
    - name: Configure CMake
      working-directory: build
      run: cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
      
    - name: Build and Install to AppDir
      working-directory: build
      run: |
        make
        make DESTDIR=AppDir install
      
    - name: Download linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        
    - name: Create AppImage
      working-directory: build
      run: |
        # Create AppImage using the AppDir created by make install
        ../linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage
        
        # Rename and create MD5
        mv PingCCXPool*.AppImage PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
        md5sum PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage > PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64
        path: |
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage
          build/PingCCXPool-${{ steps.get_version.outputs.FILE_VERSION }}-ubuntu22.04-x86_64.AppImage.md5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 